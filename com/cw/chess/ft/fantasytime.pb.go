// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.12.4
// source: fantasytime.proto

package ft

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//**********************************ft游戏客户端和服务端通信定义开始********************************
type ServerCommonCmd int32

const (
	ServerCommonCmd_CMD_Fantasy_Time_INVALID    ServerCommonCmd = 0 // 无效
	ServerCommonCmd_CMD_Fantasy_Time_Kind_REQ   ServerCommonCmd = 1 // 获取Fantasy_Time类型：NULL（客户端请求一次就可以了，MSG_Fantasy_Time_Kind_RESP数据可以缓存在客户端）
	ServerCommonCmd_CMD_Fantasy_Time_Kind_RESP  ServerCommonCmd = 2 // 获取Fantasy_Time类型：MSG_Fantasy_Time_Kind_RESP
	ServerCommonCmd_CMD_Fantasy_Time_REQ        ServerCommonCmd = 3 // 请求：MSG_Fantasy_Time_REQ
	ServerCommonCmd_CMD_Fantasy_Time_RESP       ServerCommonCmd = 4 // 结果：MSG_Fantasy_Time_RESP
	ServerCommonCmd_CMD_Fantasy_Time_Check_REQ  ServerCommonCmd = 5 // 请求参数中的game_id是否可以参与ft
	ServerCommonCmd_CMD_Fantasy_Time_Check_RESP ServerCommonCmd = 6 // 请求参数中的game_id是否可以参与ft
)

// Enum value maps for ServerCommonCmd.
var (
	ServerCommonCmd_name = map[int32]string{
		0: "CMD_Fantasy_Time_INVALID",
		1: "CMD_Fantasy_Time_Kind_REQ",
		2: "CMD_Fantasy_Time_Kind_RESP",
		3: "CMD_Fantasy_Time_REQ",
		4: "CMD_Fantasy_Time_RESP",
		5: "CMD_Fantasy_Time_Check_REQ",
		6: "CMD_Fantasy_Time_Check_RESP",
	}
	ServerCommonCmd_value = map[string]int32{
		"CMD_Fantasy_Time_INVALID":    0,
		"CMD_Fantasy_Time_Kind_REQ":   1,
		"CMD_Fantasy_Time_Kind_RESP":  2,
		"CMD_Fantasy_Time_REQ":        3,
		"CMD_Fantasy_Time_RESP":       4,
		"CMD_Fantasy_Time_Check_REQ":  5,
		"CMD_Fantasy_Time_Check_RESP": 6,
	}
)

func (x ServerCommonCmd) Enum() *ServerCommonCmd {
	p := new(ServerCommonCmd)
	*p = x
	return p
}

func (x ServerCommonCmd) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServerCommonCmd) Descriptor() protoreflect.EnumDescriptor {
	return file_fantasytime_proto_enumTypes[0].Descriptor()
}

func (ServerCommonCmd) Type() protoreflect.EnumType {
	return &file_fantasytime_proto_enumTypes[0]
}

func (x ServerCommonCmd) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServerCommonCmd.Descriptor instead.
func (ServerCommonCmd) EnumDescriptor() ([]byte, []int) {
	return file_fantasytime_proto_rawDescGZIP(), []int{0}
}

// 一个选择（客户端自行补充需要显示的内容，例如星星数量、图片等等）
type F_TOne struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FTOneId uint32 `protobuf:"varint,1,opt,name=f_t_one_id,json=fTOneId,proto3" json:"f_t_one_id,omitempty"` // id
	//
	//1: X 0
	//2: X 1.1
	//3: X 1.2
	//4: X 1.5
	//5: X 2
	//6: X 3
	//7: X 4
	//8  X 5
	Odd uint32 `protobuf:"varint,2,opt,name=odd,proto3" json:"odd,omitempty"` // 倍数，按照百分比，例如110代表1.1倍，200代表2倍
	Per uint32 `protobuf:"varint,3,opt,name=per,proto3" json:"per,omitempty"` // 概率，百分比
}

func (x *F_TOne) Reset() {
	*x = F_TOne{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fantasytime_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *F_TOne) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*F_TOne) ProtoMessage() {}

func (x *F_TOne) ProtoReflect() protoreflect.Message {
	mi := &file_fantasytime_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use F_TOne.ProtoReflect.Descriptor instead.
func (*F_TOne) Descriptor() ([]byte, []int) {
	return file_fantasytime_proto_rawDescGZIP(), []int{0}
}

func (x *F_TOne) GetFTOneId() uint32 {
	if x != nil {
		return x.FTOneId
	}
	return 0
}

func (x *F_TOne) GetOdd() uint32 {
	if x != nil {
		return x.Odd
	}
	return 0
}

func (x *F_TOne) GetPer() uint32 {
	if x != nil {
		return x.Per
	}
	return 0
}

// Fantasy_Time的模板详细数据
type F_TGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FTGroupId uint32    `protobuf:"varint,1,opt,name=f_t_group_id,json=fTGroupId,proto3" json:"f_t_group_id,omitempty"`
	FT        []*F_TOne `protobuf:"bytes,2,rep,name=f_t,json=fT,proto3" json:"f_t,omitempty"` //
}

func (x *F_TGroup) Reset() {
	*x = F_TGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fantasytime_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *F_TGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*F_TGroup) ProtoMessage() {}

func (x *F_TGroup) ProtoReflect() protoreflect.Message {
	mi := &file_fantasytime_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use F_TGroup.ProtoReflect.Descriptor instead.
func (*F_TGroup) Descriptor() ([]byte, []int) {
	return file_fantasytime_proto_rawDescGZIP(), []int{1}
}

func (x *F_TGroup) GetFTGroupId() uint32 {
	if x != nil {
		return x.FTGroupId
	}
	return 0
}

func (x *F_TGroup) GetFT() []*F_TOne {
	if x != nil {
		return x.FT
	}
	return nil
}

type MSG_Fantasy_Time_Kind_RESP struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FTGroupAll []*F_TGroup `protobuf:"bytes,1,rep,name=f_t_group_all,json=fTGroupAll,proto3" json:"f_t_group_all,omitempty"`
}

func (x *MSG_Fantasy_Time_Kind_RESP) Reset() {
	*x = MSG_Fantasy_Time_Kind_RESP{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fantasytime_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MSG_Fantasy_Time_Kind_RESP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MSG_Fantasy_Time_Kind_RESP) ProtoMessage() {}

func (x *MSG_Fantasy_Time_Kind_RESP) ProtoReflect() protoreflect.Message {
	mi := &file_fantasytime_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MSG_Fantasy_Time_Kind_RESP.ProtoReflect.Descriptor instead.
func (*MSG_Fantasy_Time_Kind_RESP) Descriptor() ([]byte, []int) {
	return file_fantasytime_proto_rawDescGZIP(), []int{2}
}

func (x *MSG_Fantasy_Time_Kind_RESP) GetFTGroupAll() []*F_TGroup {
	if x != nil {
		return x.FTGroupAll
	}
	return nil
}

type MSG_Fantasy_Time_REQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameId    string `protobuf:"bytes,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`               // 牌局ID
	FTGroupId uint32 `protobuf:"varint,2,opt,name=f_t_group_id,json=fTGroupId,proto3" json:"f_t_group_id,omitempty"` // 使用哪一个模板的id，这个值客户端自己随机
	Choice    uint32 `protobuf:"varint,3,opt,name=choice,proto3" json:"choice,omitempty"`                            // 用户的选择（1/2/3/4/5）（实际不参与运算）
}

func (x *MSG_Fantasy_Time_REQ) Reset() {
	*x = MSG_Fantasy_Time_REQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fantasytime_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MSG_Fantasy_Time_REQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MSG_Fantasy_Time_REQ) ProtoMessage() {}

func (x *MSG_Fantasy_Time_REQ) ProtoReflect() protoreflect.Message {
	mi := &file_fantasytime_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MSG_Fantasy_Time_REQ.ProtoReflect.Descriptor instead.
func (*MSG_Fantasy_Time_REQ) Descriptor() ([]byte, []int) {
	return file_fantasytime_proto_rawDescGZIP(), []int{3}
}

func (x *MSG_Fantasy_Time_REQ) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

func (x *MSG_Fantasy_Time_REQ) GetFTGroupId() uint32 {
	if x != nil {
		return x.FTGroupId
	}
	return 0
}

func (x *MSG_Fantasy_Time_REQ) GetChoice() uint32 {
	if x != nil {
		return x.Choice
	}
	return 0
}

type MSG_Fantasy_Time_RESP struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result    uint32 `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	GameId    string `protobuf:"bytes,2,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`           // 牌局ID
	FTId      uint32 `protobuf:"varint,3,opt,name=f_t_id,json=fTId,proto3" json:"f_t_id,omitempty"`              // 模板id
	Choice    uint32 `protobuf:"varint,4,opt,name=choice,proto3" json:"choice,omitempty"`                        // 用户的选择的位置（1/2/3/4/5）
	FTOneId   uint32 `protobuf:"varint,5,opt,name=f_t_one_id,json=fTOneId,proto3" json:"f_t_one_id,omitempty"`   // 牌的结果（1/2/3/4/5/6/7/8）
	FCurrency uint32 `protobuf:"varint,6,opt,name=f_currency,json=fCurrency,proto3" json:"f_currency,omitempty"` // 输赢（只显示结果用途，用户金钱的更新还是会走老的CMD_GET_PLAYER_BALANCE_RESP协议）
}

func (x *MSG_Fantasy_Time_RESP) Reset() {
	*x = MSG_Fantasy_Time_RESP{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fantasytime_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MSG_Fantasy_Time_RESP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MSG_Fantasy_Time_RESP) ProtoMessage() {}

func (x *MSG_Fantasy_Time_RESP) ProtoReflect() protoreflect.Message {
	mi := &file_fantasytime_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MSG_Fantasy_Time_RESP.ProtoReflect.Descriptor instead.
func (*MSG_Fantasy_Time_RESP) Descriptor() ([]byte, []int) {
	return file_fantasytime_proto_rawDescGZIP(), []int{4}
}

func (x *MSG_Fantasy_Time_RESP) GetResult() uint32 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *MSG_Fantasy_Time_RESP) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

func (x *MSG_Fantasy_Time_RESP) GetFTId() uint32 {
	if x != nil {
		return x.FTId
	}
	return 0
}

func (x *MSG_Fantasy_Time_RESP) GetChoice() uint32 {
	if x != nil {
		return x.Choice
	}
	return 0
}

func (x *MSG_Fantasy_Time_RESP) GetFTOneId() uint32 {
	if x != nil {
		return x.FTOneId
	}
	return 0
}

func (x *MSG_Fantasy_Time_RESP) GetFCurrency() uint32 {
	if x != nil {
		return x.FCurrency
	}
	return 0
}

type MSG_Fantasy_Time_Check_REQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameId string `protobuf:"bytes,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"` // 牌局ID
}

func (x *MSG_Fantasy_Time_Check_REQ) Reset() {
	*x = MSG_Fantasy_Time_Check_REQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fantasytime_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MSG_Fantasy_Time_Check_REQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MSG_Fantasy_Time_Check_REQ) ProtoMessage() {}

func (x *MSG_Fantasy_Time_Check_REQ) ProtoReflect() protoreflect.Message {
	mi := &file_fantasytime_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MSG_Fantasy_Time_Check_REQ.ProtoReflect.Descriptor instead.
func (*MSG_Fantasy_Time_Check_REQ) Descriptor() ([]byte, []int) {
	return file_fantasytime_proto_rawDescGZIP(), []int{5}
}

func (x *MSG_Fantasy_Time_Check_REQ) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

type MSG_Fantasy_Time_Check_RESP struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result    uint32 `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`                            // 0：可以；其他值：不可以
	GameId    string `protobuf:"bytes,2,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`               // 牌局ID
	FTGroupId uint32 `protobuf:"varint,3,opt,name=f_t_group_id,json=fTGroupId,proto3" json:"f_t_group_id,omitempty"` // 模板id
}

func (x *MSG_Fantasy_Time_Check_RESP) Reset() {
	*x = MSG_Fantasy_Time_Check_RESP{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fantasytime_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MSG_Fantasy_Time_Check_RESP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MSG_Fantasy_Time_Check_RESP) ProtoMessage() {}

func (x *MSG_Fantasy_Time_Check_RESP) ProtoReflect() protoreflect.Message {
	mi := &file_fantasytime_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MSG_Fantasy_Time_Check_RESP.ProtoReflect.Descriptor instead.
func (*MSG_Fantasy_Time_Check_RESP) Descriptor() ([]byte, []int) {
	return file_fantasytime_proto_rawDescGZIP(), []int{6}
}

func (x *MSG_Fantasy_Time_Check_RESP) GetResult() uint32 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *MSG_Fantasy_Time_Check_RESP) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

func (x *MSG_Fantasy_Time_Check_RESP) GetFTGroupId() uint32 {
	if x != nil {
		return x.FTGroupId
	}
	return 0
}

var File_fantasytime_proto protoreflect.FileDescriptor

var file_fantasytime_proto_rawDesc = []byte{
	0x0a, 0x11, 0x66, 0x61, 0x6e, 0x74, 0x61, 0x73, 0x79, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x77, 0x2e, 0x63, 0x68, 0x65, 0x73,
	0x73, 0x2e, 0x66, 0x74, 0x22, 0x4a, 0x0a, 0x07, 0x46, 0x5f, 0x54, 0x5f, 0x6f, 0x6e, 0x65, 0x12,
	0x1b, 0x0a, 0x0a, 0x66, 0x5f, 0x74, 0x5f, 0x6f, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x66, 0x54, 0x4f, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x6f, 0x64, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6f, 0x64, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x70, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x70, 0x65, 0x72,
	0x22, 0x57, 0x0a, 0x09, 0x46, 0x5f, 0x54, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1f, 0x0a,
	0x0c, 0x66, 0x5f, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x66, 0x54, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x29,
	0x0a, 0x03, 0x66, 0x5f, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x63, 0x77, 0x2e, 0x63, 0x68, 0x65, 0x73, 0x73, 0x2e, 0x66, 0x74, 0x2e, 0x46, 0x5f,
	0x54, 0x5f, 0x6f, 0x6e, 0x65, 0x52, 0x02, 0x66, 0x54, 0x22, 0x5b, 0x0a, 0x1a, 0x4d, 0x53, 0x47,
	0x5f, 0x46, 0x61, 0x6e, 0x74, 0x61, 0x73, 0x79, 0x5f, 0x54, 0x69, 0x6d, 0x65, 0x5f, 0x4b, 0x69,
	0x6e, 0x64, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x12, 0x3d, 0x0a, 0x0d, 0x66, 0x5f, 0x74, 0x5f, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x5f, 0x61, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x77, 0x2e, 0x63, 0x68, 0x65, 0x73, 0x73, 0x2e, 0x66, 0x74,
	0x2e, 0x46, 0x5f, 0x54, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x0a, 0x66, 0x54, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x41, 0x6c, 0x6c, 0x22, 0x68, 0x0a, 0x14, 0x4d, 0x53, 0x47, 0x5f, 0x46, 0x61,
	0x6e, 0x74, 0x61, 0x73, 0x79, 0x5f, 0x54, 0x69, 0x6d, 0x65, 0x5f, 0x52, 0x45, 0x51, 0x12, 0x17,
	0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0c, 0x66, 0x5f, 0x74, 0x5f, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x66,
	0x54, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x68, 0x6f, 0x69,
	0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65,
	0x22, 0xb2, 0x01, 0x0a, 0x15, 0x4d, 0x53, 0x47, 0x5f, 0x46, 0x61, 0x6e, 0x74, 0x61, 0x73, 0x79,
	0x5f, 0x54, 0x69, 0x6d, 0x65, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x06, 0x66,
	0x5f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x66, 0x54, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x0a, 0x66, 0x5f, 0x74,
	0x5f, 0x6f, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x66,
	0x54, 0x4f, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x5f, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x66, 0x43, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x22, 0x35, 0x0a, 0x1a, 0x4d, 0x53, 0x47, 0x5f, 0x46, 0x61, 0x6e,
	0x74, 0x61, 0x73, 0x79, 0x5f, 0x54, 0x69, 0x6d, 0x65, 0x5f, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x5f,
	0x52, 0x45, 0x51, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x22, 0x6f, 0x0a, 0x1b,
	0x4d, 0x53, 0x47, 0x5f, 0x46, 0x61, 0x6e, 0x74, 0x61, 0x73, 0x79, 0x5f, 0x54, 0x69, 0x6d, 0x65,
	0x5f, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0c,
	0x66, 0x5f, 0x74, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x66, 0x54, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x2a, 0xe4, 0x01,
	0x0a, 0x0f, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x43, 0x6d,
	0x64, 0x12, 0x1c, 0x0a, 0x18, 0x43, 0x4d, 0x44, 0x5f, 0x46, 0x61, 0x6e, 0x74, 0x61, 0x73, 0x79,
	0x5f, 0x54, 0x69, 0x6d, 0x65, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12,
	0x1d, 0x0a, 0x19, 0x43, 0x4d, 0x44, 0x5f, 0x46, 0x61, 0x6e, 0x74, 0x61, 0x73, 0x79, 0x5f, 0x54,
	0x69, 0x6d, 0x65, 0x5f, 0x4b, 0x69, 0x6e, 0x64, 0x5f, 0x52, 0x45, 0x51, 0x10, 0x01, 0x12, 0x1e,
	0x0a, 0x1a, 0x43, 0x4d, 0x44, 0x5f, 0x46, 0x61, 0x6e, 0x74, 0x61, 0x73, 0x79, 0x5f, 0x54, 0x69,
	0x6d, 0x65, 0x5f, 0x4b, 0x69, 0x6e, 0x64, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x10, 0x02, 0x12, 0x18,
	0x0a, 0x14, 0x43, 0x4d, 0x44, 0x5f, 0x46, 0x61, 0x6e, 0x74, 0x61, 0x73, 0x79, 0x5f, 0x54, 0x69,
	0x6d, 0x65, 0x5f, 0x52, 0x45, 0x51, 0x10, 0x03, 0x12, 0x19, 0x0a, 0x15, 0x43, 0x4d, 0x44, 0x5f,
	0x46, 0x61, 0x6e, 0x74, 0x61, 0x73, 0x79, 0x5f, 0x54, 0x69, 0x6d, 0x65, 0x5f, 0x52, 0x45, 0x53,
	0x50, 0x10, 0x04, 0x12, 0x1e, 0x0a, 0x1a, 0x43, 0x4d, 0x44, 0x5f, 0x46, 0x61, 0x6e, 0x74, 0x61,
	0x73, 0x79, 0x5f, 0x54, 0x69, 0x6d, 0x65, 0x5f, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x52, 0x45,
	0x51, 0x10, 0x05, 0x12, 0x1f, 0x0a, 0x1b, 0x43, 0x4d, 0x44, 0x5f, 0x46, 0x61, 0x6e, 0x74, 0x61,
	0x73, 0x79, 0x5f, 0x54, 0x69, 0x6d, 0x65, 0x5f, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x52, 0x45,
	0x53, 0x50, 0x10, 0x06, 0x42, 0x13, 0x5a, 0x11, 0x2e, 0x2f, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x77,
	0x2f, 0x63, 0x68, 0x65, 0x73, 0x73, 0x2f, 0x66, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_fantasytime_proto_rawDescOnce sync.Once
	file_fantasytime_proto_rawDescData = file_fantasytime_proto_rawDesc
)

func file_fantasytime_proto_rawDescGZIP() []byte {
	file_fantasytime_proto_rawDescOnce.Do(func() {
		file_fantasytime_proto_rawDescData = protoimpl.X.CompressGZIP(file_fantasytime_proto_rawDescData)
	})
	return file_fantasytime_proto_rawDescData
}

var file_fantasytime_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_fantasytime_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_fantasytime_proto_goTypes = []interface{}{
	(ServerCommonCmd)(0),                // 0: com.cw.chess.ft.ServerCommonCmd
	(*F_TOne)(nil),                      // 1: com.cw.chess.ft.F_T_one
	(*F_TGroup)(nil),                    // 2: com.cw.chess.ft.F_T_group
	(*MSG_Fantasy_Time_Kind_RESP)(nil),  // 3: com.cw.chess.ft.MSG_Fantasy_Time_Kind_RESP
	(*MSG_Fantasy_Time_REQ)(nil),        // 4: com.cw.chess.ft.MSG_Fantasy_Time_REQ
	(*MSG_Fantasy_Time_RESP)(nil),       // 5: com.cw.chess.ft.MSG_Fantasy_Time_RESP
	(*MSG_Fantasy_Time_Check_REQ)(nil),  // 6: com.cw.chess.ft.MSG_Fantasy_Time_Check_REQ
	(*MSG_Fantasy_Time_Check_RESP)(nil), // 7: com.cw.chess.ft.MSG_Fantasy_Time_Check_RESP
}
var file_fantasytime_proto_depIdxs = []int32{
	1, // 0: com.cw.chess.ft.F_T_group.f_t:type_name -> com.cw.chess.ft.F_T_one
	2, // 1: com.cw.chess.ft.MSG_Fantasy_Time_Kind_RESP.f_t_group_all:type_name -> com.cw.chess.ft.F_T_group
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_fantasytime_proto_init() }
func file_fantasytime_proto_init() {
	if File_fantasytime_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_fantasytime_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*F_TOne); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fantasytime_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*F_TGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fantasytime_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MSG_Fantasy_Time_Kind_RESP); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fantasytime_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MSG_Fantasy_Time_REQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fantasytime_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MSG_Fantasy_Time_RESP); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fantasytime_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MSG_Fantasy_Time_Check_REQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fantasytime_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MSG_Fantasy_Time_Check_RESP); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_fantasytime_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_fantasytime_proto_goTypes,
		DependencyIndexes: file_fantasytime_proto_depIdxs,
		EnumInfos:         file_fantasytime_proto_enumTypes,
		MessageInfos:      file_fantasytime_proto_msgTypes,
	}.Build()
	File_fantasytime_proto = out.File
	file_fantasytime_proto_rawDesc = nil
	file_fantasytime_proto_goTypes = nil
	file_fantasytime_proto_depIdxs = nil
}
